# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

linter:
  # The lint rules applied to this project can be customized in the
  # section below to disable rules from the `package:flutter_lints/flutter.yaml`
  # included above or to enable additional rules. A list of all available lints
  # and their documentation is published at https://dart.dev/lints.
  #
  # Instead of disabling a lint rule for the entire project in the
  # section below, it can also be suppressed for a single line of code
  # or a specific dart file by using the `// ignore: name_of_lint` and
  # `// ignore_for_file: name_of_lint` syntax on the line or in the file
  # producing the lint.
  rules:
    # Const-related (performance)
    - prefer_const_constructors
    - prefer_const_literals_to_create_immutables
    - prefer_const_constructors_in_immutables

    # Code style & readability
    - always_declare_return_types
    - avoid_unnecessary_containers
    - avoid_print
    - sort_child_properties_last
    - sized_box_for_whitespace
    - prefer_final_locals
    - prefer_final_parameters: false
    - prefer_single_quotes
    - avoid_positional_boolean_parameters
    - unnecessary_this
    - omit_local_variable_types

    # Safety & error avoidance
    - avoid_types_on_closure_parameters
    - no_leading_underscores_for_local_identifiers
    - avoid_empty_else
    - avoid_init_to_null
    - null_closures
    - unnecessary_null_checks
    - unnecessary_nullable_for_final_variable_declarations

    # Optimization & performance
    - use_key_in_widget_constructors
    - prefer_const_declarations
    - use_rethrow_when_possible
    - avoid_redundant_argument_values
    - avoid_returning_null_for_future

    # Good practices
    - annotate_overrides
    - prefer_typing_uninitialized_variables
    - avoid_classes_with_only_static_members
    - prefer_collection_literals
    - use_full_hex_values_for_flutter_colors
    - join_return_with_assignment

    # avoid_print: false  # Uncomment to disable the `avoid_print` rule
    # prefer_single_quotes: true  # Uncomment to enable the `prefer_single_quotes` rule
# Additional information about this file can be found at
# https://dart.dev/guides/language/analysis-options
